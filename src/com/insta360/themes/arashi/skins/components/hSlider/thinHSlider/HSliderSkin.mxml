<?xml version="1.0" encoding="utf-8"?>
<!--

////////////////////////////////////////////////////////////////////////////////
//	
//	Copyright 2014 Ardisia Labs LLC. All Rights Reserved.
//
//	This file is licensed under the Ardisia Component Library License. 
//
//	Only license holders are entitled to use this file subject to the  
//	conditions of the license. All other uses are expressly forbidden. Visit 
//	http://www.ardisialabs.com to view and purchase a license.
//
//	Apache Flex's source code notices are reproduced below.
//
// 	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
//
//  Licensed to the Apache Software Foundation (ASF) under one or more
//  contributor license agreements.  See the NOTICE file distributed with
//  this work for additional information regarding copyright ownership.
//  The ASF licenses this file to You under the Apache License, Version 2.0
//  (the "License"); you may not use this file except in compliance with
//  the License.  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////

-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
		xmlns:skins="ardisia.themes.london.skins.*" 
		xmlns:dataTip="ardisia.components.dataTip.*"
		minHeight="23" 
		alpha.disabled="0.5"
		rollOut="eventHandler(event)">

	<!-- host component -->
    <fx:Metadata>
    	<![CDATA[ [HostComponent("spark.components.HSlider")] ]]>
    </fx:Metadata> 
    
	<!-- scripts -->
    <fx:Script>
		<![CDATA[
			
			//----------------------------------
			//  overridden methods
			//----------------------------------
			
			 override protected function measure():void
	        {
	            var thumbPos:Number = thumb.getLayoutBoundsX();
	            thumb.setLayoutBoundsPosition(0, thumb.getLayoutBoundsY());
				
	            super.measure();
				
	            thumb.setLayoutBoundsPosition(thumbPos, thumb.getLayoutBoundsY());
	        }
			
			//----------------------------------
			//  event handlers
			//----------------------------------
			
			protected function eventHandler(event:Event):void
			{
				// trick the hostComponent into removing the mouseWheel handler
				// which is very annoying; will receive focus normally otherwise
				hostComponent.dispatchEvent(new FocusEvent(FocusEvent.FOCUS_OUT));
			}
			
		]]>
    </fx:Script>
    
	<!-- states -->
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>
    
	<!-- declarations -->
	<fx:Declarations>
		
        <fx:Component id="dataTip">     
			
			<!--- apply skin explicitly so skin gets set; stylemanager not reliable -->
			<dataTip:DataTip y="-34"
							 skinClass="ardisia.components.dataTip.themes.spark.skins.DataTipSkin"/>
			
       </fx:Component>
		
    </fx:Declarations>
    
	<!-- skin part -->
	<!--- @optional -->
    <s:Button id="track" 
			  left="0" right="0"
			  verticalCenter="-1"
			  minWidth="33" width="100" height="2"
              tabEnabled="false"
			  cornerRadius="1"
              skinClass="com.insta360.themes.arashi.skins.components.hSlider.thinHSlider.HSliderTrackSkin" />
              
	<!-- skin part -->
	<!--- @optional -->
	<s:Button id="thumb"
			  verticalCenter="-1"
              tabEnabled="false"
              skinClass="com.insta360.themes.arashi.skins.components.hSlider.thinHSlider.SliderThumbSkin"/>
</s:Skin>
